spring.jpa.hibernate.ddl-auto=none  
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/sbms
#spring.datasource.url=jdbc:mysql://193.123.66.91:3306/sbms
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.show-sql=false

server.port=8080


our.very.very.very.secret.key=hend
#
##ldap configuration
## path to initializer file
#spring.ldap.embedded.ldif=classpath:test-server.ldif
## configure ldap structure
#spring.ldap.embedded.base-dn=dc=springframework,dc=org
#spring.ldap.embedded.port=8389

#https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#aop-proxying
# Spring AOP uses either JDK dynamic (native) proxies or CGLIB (third-party library bundled with spring)
# when using ldap  error thrown with message -> Could not generate CGLIB subclass of class com.unboundid.ldap.listener.InMemoryDirectoryServer
# Basically in this case problem is with AOP proxy, for some reason CGLIB proxying not working in this case. so you have to turn it off and switch to JDK proxy
# to disable CGLIB
spring.aop.proxy-target-class=false
#
#
## specifies which datasource name to use . and all other properties are common in this file
## use comma to seperate
## replace [client_name]-[environment]
## add liquibase-sql in case of using sql server db or liquibase-oracle in case of using oracle db
## keep setting and logging
## replace spring.profiles.active=[client_name]-[environment] , liquibase-sql/liquibase-oracle , setting, logging
#spring.profiles.active=oracle-local, liquibase-oracle-new , setting , logging , activemq
#
## enable liquibase globally for all datasources, if you want to run liquibase for single datasource make this property false
## and enable liquibase in profile datasource.
#spring.liquibase.enabled = true
#
## this property sets the orm needed for database versions.
## default for all banks:  leave it empty
## for oracle 11:  use META-INF/orm/orm-sequence.xml
## for DG_ECM_ADMIN Schema: use META-INF/orm/orm-dg_ecm_admin.xml
## for DG_ECM_ADMIN Schema and oracle 11: use: orm-sequence-dg_ecm_admin.xml
#spring.jpa.orm=META-INF/orm/orm-dg_ecm_admin.xml
#
## allow circular dep. in spring components : new property in spring boot
#spring.main.allow-circular-references = true
#
##spring.jpa.properties.org.hibernate.envers.audit_table_suffix=_AUD
##spring.jpa.properties.org.hibernate.envers.revision_field_name=VERSION_ID
##spring.jpa.properties.org.hibernate.envers.revision_schema_name=Admin_AUD
##spring.jpa.properties.org.hibernate.envers.revision_type_field=VERSION_TYPE
##spring.jpa.properties.org.hibernate.envers.default_schema=Admin
##spring.jpa.properties.hibernate.integration.envers.enabled=true
#spring.jpa.properties.org.hibernate.envers.store_data_at_delete=true
#
#
## update cases cron pattern
## second, minute, hour, day of month, month, day(s) of week
##update-cases-cron-pattern = 0 0/1 * * * ?
## update-cases-cron-pattern = 0 0 1 * * ?
#
## - is to disable cron job
#update-cases-cron-pattern = -
#
#
## this property means if database model is sas or dgecm model
##ecm-model = DGECM_VERSION
#ecm-model = DGECM_LIVE
##ecm-model = SAS
#
##spring.jpa.properties.hibernate.dialect_resolvers = com.datagear.config.CustomDialectOracle
##spring.jpa.database-platform=com.datagear.config.CustomDialectOracle
#
#server.servlet.context-path=/ecm
#spring.jpa.hibernate.ddl-auto= none
#spring.jpa.generate-ddl= false
#
#spring.devtools.restart.enabled= true
#
#server.max-http-header-size= 10000000
#server.tomcat.uri-encoding=UTF-8
#admin.datasource.sql-script-encoding=UTF-8
#spring.sql.init.encoding=UTF-8
#uploader.datasource.sql-script-encoding=UTF-8
#spring.sql.init.continue-on-error=true
#
#spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
#spring.jpa.properties.hibernate.connection.CharSet=utf-8
#spring.jpa.properties.hibernate.connection.useUnicode=true
#
## HTTP encoding (HttpEncodingProperties)
#server.servlet.encoding.charset=UTF-8
#server.servlet.encoding.enabled=true
#server.servlet.encoding.force=true
#
## rotate means to start new log file when reaches to specific size or days
#server.tomcat.accesslog.rotate=true
#
#hibernate.generate_statistics = true
#
## this line for oracle version not 12 and never used now, just put your orm.xml file in META-INF Folder and hibernate will take it automatically.
##spring.jpa.mapping-resources=META-INF/orm111.xml
##hibernate/security-oracle-v12-orm.hbm.xml , hibernate/uploader-oracle-v12-orm.hbm.xml
#
## a new property from spring boot 3 to allow returning message in the error responses
#server.error.include-message=always
